name: Deploy Gatsby site to Pages

on:
  push:
    branches: ["main"]
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  # Lint and typecheck
  check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        check:
          - name: Typecheck
            command: typecheck
          - name: ESLint
            command: lint
          - name: Prettier
            command: fmt:check
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: yarn
      - name: Install dependencies
        run: yarn install
      - name: ${{ matrix.check.name }}
        run: yarn run ${{ matrix.check.command }}

  # Build job
  build:
    needs: check
    runs-on: ubuntu-latest
    env:
      PATH_PREFIX: "/preview/pr-${{github.event.number}}/"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: yarn

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-${{ hashFiles('public') }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-

      - name: Install dependencies
        run: yarn install

      - name: Build with Gatsby
        env:
          PREFIX_PATHS: "true"
        run: yarn run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  # Deployment job
  deploy:
    # Allow one concurrent deployment
    concurrency:
      group: "pages"
      cancel-in-progress: true
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  # Deploy PR-Preview
  deploy-preview:
    environment:
      name: github-pages-staging
      url: ${{ steps.deployment.outputs.deployment-url }}
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Initialize git repo for pr-preview-action
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - uses: actions/download-artifact@v3
        with:
          name: github-pages
          path: public

      - name: Deploy preview
        uses: rossjrw/pr-preview-action@v1
        id: deployment
        with:
          action: deploy
          source-dir: public
          preview-branch: previews
          deploy-repository: aeroteameindhoven/website-staging
          custom-url: staging.aeroteameindhoven.nl
          umbrella-dir: preview
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
